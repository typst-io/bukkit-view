plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'kr.entree.spigradle.base' version '2.4.4'
}

group = 'io.typst'

repositories {
    mavenCentral()
    spigotmc()
}

dependencies {
    compileOnly spigot('1.21.4')
    compileOnly lombok('1.18.36')
    annotationProcessor lombok('1.18.36')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

publishing {
    publications {
        bukkitView(MavenPublication) {
            from components.java
            pom {
                name.set("${project.group}:${project.name}")
                description.set("Pure view library for Minecraft.")
                url.set("https://github.com/typst-io/bukkit-view")
                licenses {
                    license {
                        name.set("The GNU General Public License, Version 3.0")
                        url.set("https://www.gnu.org/licenses/gpl-3.0.txt")
                    }
                }
                developers {
                    developer {
                        id.set("entrypointkr")
                        name.set("Junhyung Im")
                        email.set("entrypointkr@gmail.com")
                    }
                }
                scm {
                    connection.set("scm:git:git://github.com/typst-io/bukkit-view.git")
                    developerConnection.set("scm:git:ssh://github.com:typst-io/bukkit-view.git")
                    url.set("https://github.com/typst-io/bukkit-view/tree/master")
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatypeReleases"
            url = uri("https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/")
            credentials {
                username = findProperty("ossrhUsername")?.toString()
                password = findProperty("ossrhPassword")?.toString()
            }
        }
    }
}

signing {
    sign(publishing.publications["bukkitView"])
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.register("publishCentralPortal") {
    group = 'publishing'
    doLast {
        def url = new URL("https://ossrh-staging-api.central.sonatype.com/manual/upload/defaultRepository/$project.group")
        println(url)
        def con = url.openConnection() as HttpURLConnection
        def username = findProperty("ossrhUsername")?.toString()
        def password = findProperty("ossrhPassword")?.toString()
        def credential = Base64.encoder.encodeToString("$username:$password".getBytes())
        def authValue = "Bearer $credential"
        con.setRequestMethod("POST")
        con.setRequestProperty("Authorization", authValue)
        println(con.responseCode)
    }
}
